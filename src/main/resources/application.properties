server.port=8084
spring.jpa.generate-ddl=true
#Esta propiedad booleana indica si se hara algo con la base de datos al iniciar la aplicacion
spring.jpa.hibernate.ddl-auto=validate
#create,create-drop,validate, none, update
# Con esto le diremos que hacer con la aplicacion al iniciar
# Existen multiples opciones, validate solo hace un select para validar que en la base de datos existan los objetos configurados en el proyecto.
# Podemos crear tablas y secuencias asignando esto a create e hibernate se encargara de sincronizar las entidades del proyecto con la base de datos.
# En este caso tenemos la base de datos creada, por ende solo vamos a validar.
spring.jpa.show-sql=true
# Esto hara que todas las queries ejecutadas se muestren en el log
#spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
#ORACLE
spring.datasource.driver-class-name: oracle.jdbc.OracleDriver
spring.datasource.url: jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.username: avargas
spring.datasource.password: admin
spring.jpa.properties.hibernate.dialect:org.hibernate.dialect.Oracle8iDialect
#MySQL
#spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
#spring.datasource.url: jdbc:mysql://localhost:3306/nombreBaseDatos?serverTimezone=UTC
#spring.datasource.username: root
#spring.datasource.password: admin
#spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp
